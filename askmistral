#!/bin/bash

source .env
apikey=$API_KEY
model=$MODEL
timestamp=$(date +"%Y-%m-%d_%H:%M")
load_type="prompt"

print_help() {
  echo "Usage: $0 [-f <filepath>] [-c <conversationfile>] [-m <model>] <prompt>"
  echo "Options:"
  echo "  -f <filepath>            Specify a file path"
  echo "  -c <conversationfile>    Specify a conversation file path"
  echo "  -m <model>               Specify a model"
  echo "  -h                       Display this help message"
  exit 1
}

while getopts ":f:c:m:h" opt; do
    case $opt in
      f)
          filepath="$OPTARG"
          load_type="file"
          ;;
      c)
          conversationfile="$OPTARG"
          load_type="conversation"
          ;;
      m)
          model="$OPTARG"
          ;;
      h)
          print_help
          ;;
      \?)
          echo "Invalid option: -$OPTARG" >&2
          exit 1
          ;;
      :)
          echo "Option -$OPTARG requires an argument." >&2
          exit 1
          ;;
    esac
done

shift $((OPTIND - 1))

if [ $load_type == "file" ]; then
    prompt=$(cat "$filepath")
    echo "File content:"
    echo "$prompt"
    prompt=$(jq -n --arg text "$prompt" '$text')
    json_data=$(jq -n \
        --arg model $model \
        --argjson messages "[{\"role\":\"user\",\"content\":$prompt}]" \
        '{model: $model, messages: $messages}'
    )

elif [ $load_type == "conversation" ]; then
    json_data=$(jq -c '.' "$conversationfile")

else
    prompt="$1"
    json_data=$(jq -n \
        --arg model $model \
        --argjson messages "[{\"role\":\"user\",\"content\":\"$prompt\"}]" \
        '{model: $model, messages: $messages}'
    )
fi

if [ $load_type != "conversation" ]; then
    response=$(curl --location "https://api.mistral.ai/v1/chat/completions" \
                    --header 'Content-Type: application/json' \
                    --header 'Accept: application/json' \
                    --header "Authorization: Bearer ${apikey}" \
                    --data "$json_data")

    echo "$response" | jq -r '.choices[0].message.content'
    assistant_msg=$(echo "$response" | jq '.choices[0].message') 
  
    json_data=$(echo "$json_data" | jq  --argjson assistant_msg "$assistant_msg" \
              '.messages += [$assistant_msg]')
    echo "$json_data" > "./conversations/$timestamp.json"

else 
    # print last message
    last_msg=$(echo "$json_data" | jq '.messages[-1].content')
    echo "$last_msg"
fi

while true; do
    read -p "Enter input (-f for file, q to exit): " input
    if [ "$input" = "q" ]; then
        # output the conversation to a file
         break
    fi
    if [ "$input" == "-f" ]; then
        read -p "Enter filename: " file
        input=$(cat "$file") 
        echo "File content:"
        echo "$input"
    fi  
    input=$(jq -n --arg text "$input" '$text')
    json_data=$(echo "$json_data" | jq --argjson user_msg \
             "{ \"role\": \"user\", \"content\": $input }" \
             '.messages += [$user_msg]')
  
    response=$(curl --location "https://api.mistral.ai/v1/chat/completions" \
                    --header 'Content-Type: application/json' \
                    --header 'Accept: application/json' \
                    --header "Authorization: Bearer ${apikey}" \
                    --data "$json_data")

    echo "$response" | jq -r '.choices[0].message.content'
    assistant_msg=$(echo "$response" | jq '.choices[0].message') 
  
    json_data=$(echo "$json_data" | jq  --argjson assistant_msg "$assistant_msg" \
              '.messages += [$assistant_msg]')
    if [ -e "$conversationfile" ]; then
        echo "$json_data" > "$conversationfile"
    else
         echo "$json_data" > "./conversations/$timestamp.json"
    fi
done
echo "Bye!"
